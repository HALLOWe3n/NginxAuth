events {
    worker_connections 1024;
}
http {
    server {
        listen 8082;

        location /static {
            alias /static;
            proxy_pass https://authnginx.herokuapp.com/static;
        }

        auth_request /auth; # The sub-request to use

        location = /example {

            auth_request_set $authorization $upstream_http_x_authorization; # Make the sub request data available

            proxy_pass https://google.com/; # actual location of protected data
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Host $host; # Custom headers with authentication related data
            proxy_set_header Authorization $authorization;
            proxy_set_header Content-Type "application/x-www-form-urlencoded";
        }

        location = /auth {
            proxy_pass https://127.0.0.1:8000/auth;
            proxy_pass_request_body off;

            proxy_set_header Content-Length "";
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # these return values are passed to the @error401 call
            auth_request_set $auth_resp_jwt $upstream_http_x_vouch_jwt;
            auth_request_set $auth_resp_err $upstream_http_x_vouch_err;
            auth_request_set $auth_resp_failcount $upstream_http_x_vouch_failcount;
        }

        error_page 401 = @error401;

        # If the user is not logged in, redirect them to Vouch's login URL
        location @error401 {
            return 302 https://login.avocado.lol/login?url=http://$http_host$request_uri&vouch-failcount=$auth_resp_failcount&X-Vouch-Token=$auth_resp_jwt&error=$auth_resp_err;
        }

        location @error401 {
            return 302 http://$http_host/login?url=http://$http_host$request_uri;
        }
    }
}